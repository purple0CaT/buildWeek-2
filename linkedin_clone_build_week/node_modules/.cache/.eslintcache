[{"/home/aziz/Desktop/Strive/buildWeek-2/linkedin_clone_build_week/src/index.js":"1","/home/aziz/Desktop/Strive/buildWeek-2/linkedin_clone_build_week/src/App.js":"2","/home/aziz/Desktop/Strive/buildWeek-2/linkedin_clone_build_week/src/Components/Home.jsx":"3","/home/aziz/Desktop/Strive/buildWeek-2/linkedin_clone_build_week/src/Components/Navbar.jsx":"4","/home/aziz/Desktop/Strive/buildWeek-2/linkedin_clone_build_week/src/Components/Aside.jsx":"5","/home/aziz/Desktop/Strive/buildWeek-2/linkedin_clone_build_week/src/Components/SideFooter.jsx":"6","/home/aziz/Desktop/Strive/buildWeek-2/linkedin_clone_build_week/src/Components/Footer.jsx":"7","/home/aziz/Desktop/Strive/buildWeek-2/linkedin_clone_build_week/src/Components/MainContainer.jsx":"8","/home/aziz/Desktop/Strive/buildWeek-2/linkedin_clone_build_week/src/Components/Learning.jsx":"9","/home/aziz/Desktop/Strive/buildWeek-2/linkedin_clone_build_week/src/Components/ViewedPeople.jsx":"10","/home/aziz/Desktop/Strive/buildWeek-2/linkedin_clone_build_week/src/Components/EditInfo.jsx":"11","/home/aziz/Desktop/Strive/buildWeek-2/linkedin_clone_build_week/src/Components/Dashboard.jsx":"12","/home/aziz/Desktop/Strive/buildWeek-2/linkedin_clone_build_week/src/Components/Activity.jsx":"13","/home/aziz/Desktop/Strive/buildWeek-2/linkedin_clone_build_week/src/Components/About.jsx":"14"},{"size":219,"mtime":1630942951965,"results":"15","hashOfConfig":"16"},{"size":215,"mtime":1630999092189,"results":"17","hashOfConfig":"16"},{"size":777,"mtime":1631001347440,"results":"18","hashOfConfig":"16"},{"size":9288,"mtime":1630941644665,"results":"19","hashOfConfig":"16"},{"size":3200,"mtime":1631003418513,"results":"20","hashOfConfig":"16"},{"size":781,"mtime":1630941644665,"results":"21","hashOfConfig":"16"},{"size":2764,"mtime":1630999199336,"results":"22","hashOfConfig":"16"},{"size":4308,"mtime":1630998228541,"results":"23","hashOfConfig":"16"},{"size":677,"mtime":1630941644665,"results":"24","hashOfConfig":"16"},{"size":1544,"mtime":1631003452326,"results":"25","hashOfConfig":"16"},{"size":10849,"mtime":1630998228541,"results":"26","hashOfConfig":"16"},{"size":3549,"mtime":1630942951961,"results":"27","hashOfConfig":"16"},{"size":522,"mtime":1630942951961,"results":"28","hashOfConfig":"16"},{"size":1717,"mtime":1630942951961,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"3k6edt",{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/home/aziz/Desktop/Strive/buildWeek-2/linkedin_clone_build_week/src/index.js",[],["62","63"],"/home/aziz/Desktop/Strive/buildWeek-2/linkedin_clone_build_week/src/App.js",[],"/home/aziz/Desktop/Strive/buildWeek-2/linkedin_clone_build_week/src/Components/Home.jsx",["64"],"import { Row, Container, Col } from \"react-bootstrap\";\nimport LinkedinNavbar from \"./Navbar\";\nimport Aside from \"./Aside\";\nimport Footer from \"./Footer\";\nimport SideFooter from \"./SideFooter\";\nimport MainContainer from \"./MainContainer\";\nimport About from \"./About\";\nimport Dashboard from \"./Dashboard\";\nimport Activity from \"./Activity\";\n\nconst Home = () => {\n  return (\n    <Container>\n      <LinkedinNavbar />\n      <Row>\n        <Col sm={12} md={9}>\n          <br />\n          {/* PASS THE ID IN clickId */}\n          <MainContainer clickId={null} />\n          <Dashboard />\n          <About />\n          <Activity />\n        </Col>\n        <Col sm={0} md={3}>\n          <Aside />\n        </Col>\n      </Row>\n      <Footer />\n    </Container>\n  );\n};\n\nexport default Home;\n","/home/aziz/Desktop/Strive/buildWeek-2/linkedin_clone_build_week/src/Components/Navbar.jsx",[],"/home/aziz/Desktop/Strive/buildWeek-2/linkedin_clone_build_week/src/Components/Aside.jsx",["65","66"],"/home/aziz/Desktop/Strive/buildWeek-2/linkedin_clone_build_week/src/Components/SideFooter.jsx",[],"/home/aziz/Desktop/Strive/buildWeek-2/linkedin_clone_build_week/src/Components/Footer.jsx",[],"/home/aziz/Desktop/Strive/buildWeek-2/linkedin_clone_build_week/src/Components/MainContainer.jsx",["67","68","69","70","71"],"import React from \"react\";\nimport { Row, Col, Button } from \"react-bootstrap\";\nimport { useState, useEffect } from \"react\";\nimport { ImPencil } from \"react-icons/im\";\nimport \"../css/maincontainer.css\";\nimport EditInfo from \"./EditInfo\";\nrequire(\"dotenv\").config();\n\nexport default function MainContainer({ clickId }) {\n  const url = clickId\n    ? \"https://striveschool-api.herokuapp.com/api/profile/\" + clickId\n    : \"https://striveschool-api.herokuapp.com/api/profile/me\";\n  const token = process.env.REACT_APP_TOKENACCESS;\n\n  const personId = \"\";\n  const [PersonInfo, setPersonInfo] = useState([]);\n  //   !\n  //   UPDATE INFO\n  useEffect(() => {\n    fetchPerson();\n  }, []);\n  useEffect(() => {\n    fetchPerson();\n  }, [clickId]);\n  //   !\n  //   FETCHING\n  const fetchPerson = async () => {\n    try {\n      let response = await fetch(url, {\n        method: \"GET\",\n        headers: {\n          Authorization: \"Bearer \" + token,\n        },\n      });\n      if (response.ok) {\n        let data = await response.json();\n        setPersonInfo({ data });\n      } else {\n        console.log(\"Error\");\n      }\n    } catch (erorr) {}\n  };\n  //   !\n  //   JSX\n  return (\n    <>\n      {PersonInfo.data && (\n        <div className=\"w-100 mt-5 person-info\">\n          <Row>\n            {/* BG IMAGE */}\n            <Col xs=\"12\" className=\"bg-image\">\n              <img src={PersonInfo.data.image} alt=\"\" />\n              <div className=\"edit-cover d-flex align-items-center justify-content-center\">\n                <ImPencil size=\"1rem\" />\n              </div>\n            </Col>\n            {/* AVATAR */}\n            <div>\n              <img\n                className=\"avatar\"\n                src=\"https://media-exp1.licdn.com/dms/image/C4E16AQEsq53uWSPplg/profile-displaybackgroundimage-shrink_350_1400/0/1629185220320?e=1636588800&v=beta&t=brJaUskUvjk3_S4toz1F95-TPuzMELixFB8b4R9hsyo\"\n                alt=\"\"\n              />\n            </div>\n            <Col xs=\"12 d-flex\">\n              {/* LEFT SIDE */}\n              <Col xs=\"8 d-flex flex-column align-items-start name-box\">\n                {\" \"}\n                <h2>\n                  {PersonInfo.data.name} {PersonInfo.data.surname}{\" \"}\n                </h2>\n                <p className=\"text-left m-0\">{PersonInfo.data.title}</p>\n                <div className=\"d-flex  align-items-center\">\n                  <small className=\"text-muted mr-1\">\n                    {PersonInfo.data.area}\n                  </small>{\" \"}\n                  Â·{\" \"}\n                  <small className=\"ml-1 contact-info font-weight-bold\">\n                    <a href=\"\">Contact info</a>\n                  </small>{\" \"}\n                </div>\n                <div className=\"mt-3\">\n                  <Button className=\"font-weight-bold\">Open to</Button>\n                  <Button\n                    className=\"font-weight-bold\"\n                    variant=\"outline-secondary\"\n                  >\n                    Add section\n                  </Button>\n                  <Button\n                    className=\"font-weight-bold\"\n                    variant=\"outline-secondary\"\n                  >\n                    More\n                  </Button>\n                </div>\n              </Col>\n              {/* RIGHT SIDE */}\n              <Col xs=\"4\" className=\"d-flex flex-column p-4\">\n                {\" \"}\n                <div className=\"d-flex justify-content-end\">\n                  <EditInfo\n                    personId={PersonInfo.data._id}\n                    name={PersonInfo.data.name}\n                    surname={PersonInfo.data.surname}\n                    area={PersonInfo.data.area}\n                    title={PersonInfo.data.title}\n                  />\n                </div>\n                <a href=\"\" className=\"d-flex align-items-center\">\n                  <img\n                    src=\"https://media-exp1.licdn.com/dms/image/C4D0BAQFFQIjyDsOK0w/company-logo_100_100/0/1593351903670?e=1639008000&v=beta&t=38emh8r8X3fw7Ah3ky91KyaVJT_6wSkxl1MqF2QRf5E\"\n                    alt=\"\"\n                    style={{ height: \"2rem\" }}\n                  />\n                  <small className=\"font-weight-bold ml-2\">Strive School</small>\n                </a>\n              </Col>\n            </Col>\n          </Row>\n        </div>\n      )}{\" \"}\n    </>\n  );\n}\n","/home/aziz/Desktop/Strive/buildWeek-2/linkedin_clone_build_week/src/Components/Learning.jsx",[],"/home/aziz/Desktop/Strive/buildWeek-2/linkedin_clone_build_week/src/Components/ViewedPeople.jsx",["72","73","74","75"],"/home/aziz/Desktop/Strive/buildWeek-2/linkedin_clone_build_week/src/Components/EditInfo.jsx",["76"],"import React from \"react\";\nimport { Modal, Button, Row, Col, Form } from \"react-bootstrap\";\nimport { useState, useEffect } from \"react\";\nimport { ImPencil } from \"react-icons/im\";\nimport { AiFillEye } from \"react-icons/ai\";\n\nimport \"../css/editModal.css\";\n\nexport default function EditInfo({ name, surname, title, area, personId }) {\n  // CONSTANT\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const [FormerName, setFormerName] = useState();\n  //   REFRESH\n  useEffect(() => {\n    fetchCountries();\n  }, []);\n  //   URL\n  const url = \"https://striveschool-api.herokuapp.com/api/profile/me\";\n  //   COUNTRIES\n  const [Countries, setCountries] = useState({});\n  //   EDITING INFO\n  const [EditingInfo, setEditingInfo] = useState({\n    name: name,\n    surname: surname,\n    email: \"\",\n    bio: \"\",\n    title: title,\n    area: area,\n    username: \"\",\n  });\n  // Data set\n  const dataSet = (valname, valdata) => {\n    setEditingInfo({ ...EditingInfo, [valname]: valdata });\n  };\n  // DATA SEND\n  const sendData = () => {\n    postData();\n    handleClose();\n  };\n  //   FETCHING COUNTRIES\n\n  const fetchCountries = async () => {\n    try {\n      let response = await fetch(\"https://restcountries.eu/rest/v2/all\");\n      if (response.ok) {\n        let dataCount = await response.json();\n        setCountries({ data: dataCount });\n      } else {\n        console.log(\"Error\");\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  //   POSTING DATA\n  const postData = async () => {\n    try {\n      let response = await fetch(url + personId, {\n        method: \"PUT\",\n        body: JSON.stringify(EditingInfo),\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\",\n          Authorization:\n            \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MTM1ZTBhYTdiZTZjMTAwMTVmOWRiOWMiLCJpYXQiOjE2MzA5MjA4NzQsImV4cCI6MTYzMjEzMDQ3NH0.q5C0SILXauX7HfPrCSoz6sHV9dLLY4aLIoO6gnpApKA\",\n        },\n      });\n      if (response.ok) {\n        let data = await response.json();\n        setEditingInfo({ data });\n      } else {\n        console.log(\"Error\");\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  return (\n    <>\n      <ImPencil\n        size=\"1.2rem\"\n        className=\"text-muted\"\n        onClick={handleShow}\n        style={{ cursor: \"pointer\" }}\n      />\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header className=\"font-weight-light\" closeButton>\n          <Modal.Title className=\"font-weight-light\">Edit intro</Modal.Title>\n        </Modal.Header>\n        <Form onSubmit={sendData}>\n          <Modal.Body className=\"p-4\">\n            <Row>\n              <Col xs=\"6\">\n                <Form.Group controlId=\"formName\">\n                  <Form.Label>First Name *</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    value={EditingInfo.name}\n                    onChange={(e) => dataSet(\"name\", e.target.value)}\n                    placeholder=\"Enter name\"\n                  />\n                  {!FormerName && (\n                    <Form.Text\n                      className=\"addFormerBtn font-weight-bold pl-3\"\n                      onClick={() => setFormerName(true)}\n                    >\n                      Add former name\n                    </Form.Text>\n                  )}\n                </Form.Group>\n              </Col>\n              <Col xs=\"6\">\n                <Form.Group controlId=\"formSurname\">\n                  <Form.Label>Last Name *</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    value={EditingInfo.surname}\n                    onChange={(e) => dataSet(\"surname\", e.target.value)}\n                    placeholder=\"Enter name\"\n                  />\n                </Form.Group>\n              </Col>\n              {/* FORMER NAME */}\n              <Col xs=\"12\">\n                {FormerName && (\n                  <Form.Group controlId=\"formFormer\">\n                    <Form.Label>Former Name *</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"...former name\" />\n                  </Form.Group>\n                )}\n              </Col>\n              <Col xs=\"12 mt-4\">\n                <h6 className=\"text-muted ml-3\">+ Record name pronunciation</h6>\n                <p className=\"text-muted\" style={{ fontSize: \"0.9rem\" }}>\n                  Name pronunciation can only be added using our mobile app.\n                </p>\n              </Col>\n              <Col xs=\"12\">\n                <Form.Group controlId=\"formGridState\">\n                  <Form.Label>Pronouns</Form.Label>\n                  <Form.Control as=\"select\" defaultValue=\"Pronouns...\">\n                    <option>Pronouns...</option>\n                    <option>She/Her</option>\n                    <option>He/Him</option>\n                    <option>They/Them</option>\n                    <option>Custom</option>\n                  </Form.Control>\n                  <Form.Text className=\"text-muted\">\n                    Let others know how to refer to you.{\" \"}\n                    <a className=\"contact-info font-weight-bold\">Learn more</a>\n                  </Form.Text>\n                  <Form.Text className=\"addFormerBtn font-weight-bold\">\n                    <AiFillEye />{\" \"}\n                    <p style={{ fontSize: \"0.9rem\", display: \"inline-block\" }}>\n                      {\" \"}\n                      Visible to: All LinkedIn members\n                    </p>\n                  </Form.Text>\n                </Form.Group>\n              </Col>\n              <Col xs=\"12\">\n                <Form.Group controlId=\"formHeadLine\">\n                  <Form.Label>Headline *</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    value={EditingInfo.title}\n                    onChange={(e) => dataSet(\"surname\", e.target.value)}\n                    placeholder=\"... text\"\n                  />\n                </Form.Group>\n              </Col>\n              <Col xs=\"12\">\n                <Form.Group controlId=\"formCurent\">\n                  <Form.Label>Curent position</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    value={EditingInfo.title}\n                    onChange={(e) => dataSet(\"title\", e.target.value)}\n                    placeholder=\"... curent position\"\n                  />\n                  <Form.Text className=\"addFormerBtn font-weight-bold pl-3\">\n                    Add new postition\n                  </Form.Text>\n                </Form.Group>\n              </Col>\n              <Col xs=\"12\">\n                <Form.Group controlId=\"checkCompany\">\n                  <Form.Check\n                    className=\"checkbox-edit\"\n                    type=\"checkbox\"\n                    label=\"Show current company in my intro\"\n                    variant=\"success\"\n                  />\n                </Form.Group>\n              </Col>\n              {/* EDUCATION */}\n              <Col xs=\"12\">\n                <Form.Group controlId=\"formHeadLine\">\n                  <Form.Label>Education</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    value={EditingInfo.education}\n                    // onChange={(e) => dataSet(\"education\", e.target.value)}\n                    placeholder=\"... text\"\n                  />\n                  <Form.Text className=\"addFormerBtn font-weight-bold pl-3\">\n                    Add new education\n                  </Form.Text>\n                </Form.Group>\n              </Col>\n              <Col xs=\"12\">\n                <Form.Group controlId=\"checkEducation\">\n                  <Form.Check\n                    className=\"checkbox-edit\"\n                    type=\"checkbox\"\n                    label=\"Show education in my intro\"\n                  />\n                </Form.Group>\n              </Col>\n              <Col xs=\"12\">\n                <Form.Group controlId=\"formCountry\">\n                  <Form.Label>Country/Region *</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    value={EditingInfo.area}\n                    onChange={(e) => dataSet(\"area\", e.target.value)}\n                    placeholder=\"...Country\"\n                  />\n                </Form.Group>\n              </Col>\n              <Col xs=\"6\">\n                <Form.Group controlId=\"formPostal\">\n                  <Form.Label>Postal code</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    value={EditingInfo.postal}\n                    // onChange={(e) => dataSet(\"education\", e.target.value)}\n                    placeholder=\"...postal\"\n                  />\n                </Form.Group>\n              </Col>\n              <Col xs=\"6\">\n                <Form.Group controlId=\"formCountry\">\n                  <Form.Label>Locations within this area</Form.Label>\n                  <Form.Control as=\"select\" defaultValue=\"Locations...\">\n                    <option>Locations...</option>\n                    {Countries.data ? (\n                      Countries.data.map((count) => (\n                        <option key={count.name + count.numericCode}>\n                          {count.name}\n                        </option>\n                      ))\n                    ) : (\n                      <option>Locations...</option>\n                    )}\n                  </Form.Control>\n                </Form.Group>\n              </Col>\n              {/* INDUSTRY */}\n              <Col xs=\"12\">\n                <Form.Group controlId=\"formIndustry\">\n                  <Form.Label>Industry *</Form.Label>\n\n                  <Form.Control\n                    as=\"select\"\n                    defaultValue=\"Industry...\"\n                    value={EditingInfo.industry}\n                  >\n                    <option>Industry...</option>\n                    <option>Industry...</option>\n                    <option>Industry...</option>\n                  </Form.Control>\n                </Form.Group>\n              </Col>\n              <Col xs=\"12\">\n                <Form.Group controlId=\"formcontactInfo\">\n                  <Form.Label>Contact info</Form.Label>\n                  <div className=\"contact-info-change d-flex justify-content-between align-items-end\">\n                    <p className=\"mb-0\">Some text</p>\n                    <div className=\"edit-pencil-contact\">\n                      <ImPencil />\n                    </div>\n                  </div>\n                </Form.Group>\n              </Col>\n            </Row>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"primary\" type=\"submit\">\n              Save\n            </Button>\n          </Modal.Footer>\n        </Form>\n      </Modal>\n    </>\n  );\n}\n","/home/aziz/Desktop/Strive/buildWeek-2/linkedin_clone_build_week/src/Components/Dashboard.jsx",[],"/home/aziz/Desktop/Strive/buildWeek-2/linkedin_clone_build_week/src/Components/Activity.jsx",[],"/home/aziz/Desktop/Strive/buildWeek-2/linkedin_clone_build_week/src/Components/About.jsx",[],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":5,"column":8,"nodeType":"83","messageId":"84","endLine":5,"endColumn":18},{"ruleId":"81","severity":1,"message":"85","line":1,"column":15,"nodeType":"83","messageId":"84","endLine":1,"endColumn":18},{"ruleId":"86","severity":1,"message":"87","line":35,"column":6,"nodeType":"88","endLine":35,"endColumn":8,"suggestions":"89"},{"ruleId":"81","severity":1,"message":"90","line":15,"column":9,"nodeType":"83","messageId":"84","endLine":15,"endColumn":17},{"ruleId":"86","severity":1,"message":"91","line":21,"column":6,"nodeType":"88","endLine":21,"endColumn":8,"suggestions":"92"},{"ruleId":"86","severity":1,"message":"91","line":24,"column":6,"nodeType":"88","endLine":24,"endColumn":15,"suggestions":"93"},{"ruleId":"94","severity":1,"message":"95","line":79,"column":21,"nodeType":"96","endLine":79,"endColumn":32},{"ruleId":"94","severity":1,"message":"95","line":110,"column":17,"nodeType":"96","endLine":110,"endColumn":66},{"ruleId":"81","severity":1,"message":"97","line":4,"column":9,"nodeType":"83","messageId":"84","endLine":4,"endColumn":12},{"ruleId":"81","severity":1,"message":"98","line":5,"column":9,"nodeType":"83","messageId":"84","endLine":5,"endColumn":22},{"ruleId":"81","severity":1,"message":"99","line":6,"column":9,"nodeType":"83","messageId":"84","endLine":6,"endColumn":20},{"ruleId":"81","severity":1,"message":"100","line":8,"column":9,"nodeType":"83","messageId":"84","endLine":8,"endColumn":21},{"ruleId":"94","severity":1,"message":"101","line":152,"column":21,"nodeType":"96","endLine":152,"endColumn":66},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],"no-unused-vars","'SideFooter' is defined but never used.","Identifier","unusedVar","'Col' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchUsers' and 'users'. Either include them or remove the dependency array.","ArrayExpression",["104"],"'personId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchPerson'. Either include it or remove the dependency array.",["105"],["106"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'num' is assigned a value but never used.","'startingIndex' is assigned a value but never used.","'endingIndex' is assigned a value but never used.","'listgenerate' is assigned a value but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"desc":"107","fix":"108"},{"desc":"109","fix":"110"},{"desc":"111","fix":"112"},"Update the dependencies array to be: [fetchUsers, users]",{"range":"113","text":"114"},"Update the dependencies array to be: [fetchPerson]",{"range":"115","text":"116"},"Update the dependencies array to be: [clickId, fetchPerson]",{"range":"117","text":"118"},[962,964],"[fetchUsers, users]",[673,675],"[fetchPerson]",[722,731],"[clickId, fetchPerson]"]